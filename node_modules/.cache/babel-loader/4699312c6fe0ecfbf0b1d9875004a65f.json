{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/counselor/src/components/Test.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\nimport { Container, Box, Button, Grid, RadioGroup, FormControlLabel, FormControl, FormLabel, Radio } from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BorderLinearProgress = withStyles(theme => ({\n  root: {\n    height: 10,\n    borderRadius: 5\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700]\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#1a90ff\"\n  }\n}))(LinearProgress);\nexport default function Test(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [data, setData] = useState([{}]); //전체 데이터\n\n  const [test, setTest] = useState(\"\"); //문항\n\n  const [page, setPage] = useState(0); //페이지\n\n  const [response, setResponse] = useState([]);\n  const [pageQuestions, setPageQuestions] = useState([]); //현재 페이지에 필요한 네 개의 문항을 저장하는 state\n\n  const [url, setUrl] = useState(\"\");\n\n  function fetchData() {\n    axios.get(\"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\").then(response => {\n      const data = response.data.RESULT;\n      setData(data);\n    }).catch(Error => {\n      console.log(Error);\n    });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (data) {\n      let resArr = [];\n      data.map(() => {\n        resArr.push(\"\");\n      });\n      setResponse(resArr);\n    }\n  }, [data]);\n  useEffect(() => {\n    //page 가 바뀔 때 pageQuestions 를 page 에 알맞게 설정\n    //예) page 가 1 이라면, 5 ~ 8 번째 문항을 pageQuestions 에 저장\n    setPageQuestions(data.slice(page * 4, page * 4 + 4));\n  }, [page, data]); // radio 버튼을 눌러 값을 변경했을 때 response 에 해당 값을 저장하는 함수\n\n  const onChangeResponse = (e, idx) => {\n    // 현재의 respone를 임시로 저장하는 prevArray 를 선언\n    const prevArray = response; // prevArray 에서 idx (radio 버튼에 해당하는 문항 번호)에 해당하는 원소를 radio의 value로 바꿔주고, 임시로 newArray 에 저장\n    //         prevArray                                      newArray\n    // [\"\", \"\", \"\", \"\", ... , \"\", ..., \"\"] => [\"\", \"\", \"\", \"\", ... , \"radio 버튼의 value\", ..., \"\"]\n    //   0   1   2   3  ...   idx ...  27      0   1   2   3  ...            idx          ...  27\n\n    const newArray = [...prevArray.slice(0, idx), e.target.value, ...prevArray.slice(idx + 1, prevArray.length)]; // newArray 를 response 에 적용\n\n    setResponse(newArray);\n  }; //현재 페이지에 해당하는 네 개의 문항을 prop로 전달받아서 가져오는 컴포넌트\n  //questions 는 컴포넌트에서 출력할 4개의 문항을 리스트로 받아오는 props\n\n\n  const Questions = ({\n    questions\n  }) => {\n    _s();\n\n    const [buttonDisabled, setButtonDisabled] = useState(true);\n    useEffect(() => {\n      //response 가 바뀔 때(문항을 선택할 때)마다 현재 페이지에 해당하는 4개의 문항에 대해 모두 선택이 되어있는지를 검사\n      checkAllChecked();\n      console.log(response);\n    }, [response]); //현재 페이지에 해당하는 4개의 문항에 대해 모두 선택이 되어있는지를 검사\n\n    const checkAllChecked = () => {\n      //response 에서 현재 페이지에 해당하는 4개의 문항을 리스트로 받아 temp에 임시로 저장\n      const temp = response.slice(page * 4, page * 4 + 4); //temp 에 있는 네 개의 문항을 검사하여 \"\"(빈 문자열)이 하나라도 존재하면 buttonDisabled 에 true 를 저장\n\n      setButtonDisabled(temp.indexOf(\"\") == -1 ? false : true);\n    }; //questions: 현재 페이지에 해당하는 네 문항\n    //question: 그 중 한 문항\n\n\n    return /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uAC80\\uC0AC \\uC9C4\\uD589\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), questions.map((question, idx) => {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          style: {\n            padding: \"12px 80px\",\n            backgroundColor: \"#F7F7F7\",\n            margin: \"8px 0px\",\n            borderRadius: 4,\n            boxShadow: \"1px 2px 3px rgba(0,0,0,0.1)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            style: {\n              width: \"100%\"\n            },\n            component: \"fieldset\",\n            children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n              row: true,\n              name: question.qitemNo,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                justify: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: question.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  justify: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: question.answerScore01,\n                    control: /*#__PURE__*/_jsxDEV(Radio, {\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 34\n                    }, this),\n                    label: question.answer01,\n                    onChange: e => {\n                      onChangeResponse(e, page * 4 + idx);\n                    },\n                    checked: // response 에 현재 해당하는 문항의 값이 현재 선택지와 일치한다면 checked 를 true로 설정\n                    // idx 는 단순 현재 페이지에서 몇 번째에 해당하는 문항인지를 의미\n                    // page * 4 를 더해줌으로써 실제 문항의 수와 일치하게 만들어줌\n                    // 예) 3페이지의 3번째 문항 = 2 * 4 + 3 = 11번째 문항\n                    response[page * 4 + idx] == question.answerScore01 ? true : false\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: question.answerScore02,\n                    control: /*#__PURE__*/_jsxDEV(Radio, {\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 34\n                    }, this),\n                    label: question.answer02,\n                    onChange: e => {\n                      onChangeResponse(e, page * 4 + idx);\n                    },\n                    checked: response[page * 4 + idx] == question.answerScore02 ? true : false\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [page !== 0 && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: onPrevPage,\n          children: \"\\uC774\\uC804\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: buttonDisabled,\n          onClick: onChangePage,\n          children: page == 6 ? \"제출\" : \"다음\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }; //페이지 증가\n\n\n  _s(Questions, \"rtUbcsMIcrL0cwl5bSdyc6I7DC0=\");\n\n  const onChangePage = () => {\n    if (page == 6) {\n      postData();\n    } else {\n      setPage(page + 1);\n    }\n  };\n\n  useEffect(() => {\n    if (url != \"\") {\n      props.history.push({\n        pathname: \"/end\",\n        state: {\n          url: url\n        }\n      });\n    }\n  }, [url]); //페이지 감소\n\n  const onPrevPage = () => {\n    setPage(page - 1);\n  };\n\n  async function postData() {\n    let answer = \"\";\n    response.map((res, idx) => {\n      if (idx == 27) {\n        answer += \"B\" + (idx + 1) + \"=\" + res;\n      } else {\n        answer += \"B\" + (idx + 1) + \"=\" + res + \" \";\n      }\n    });\n    console.log(answer);\n    let results = {\n      apikey: \"5894ecf675f64f28cd358b417ed6ad1b\",\n      qestrnSeq: \"6\",\n      trgetSe: \"100208\",\n      name: props.location.state.userName,\n      gender: props.location.state.userGender,\n      school: \"\",\n      grade: \"\",\n      email: \"\",\n      startDtm: String(new Date().getTime()),\n      answers: answer\n    };\n    const post_contents = await axios.post(\"https://www.career.go.kr/inspct/openapi/test/report\", JSON.stringify(results), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    setUrl(post_contents.data.RESULT.url);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Questions, {\n          questions: pageQuestions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s2(Test, \"9vZ0Q/IZk3rXb12Sv85ZoxRTz50=\");\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/kji/Project/counselor/src/components/Test.js"],"names":["React","useState","useEffect","End","axios","Container","Box","Button","Grid","RadioGroup","FormControlLabel","FormControl","FormLabel","Radio","makeStyles","withStyles","LinearProgress","BorderLinearProgress","theme","root","height","borderRadius","colorPrimary","backgroundColor","palette","grey","type","bar","Test","props","data","setData","test","setTest","page","setPage","response","setResponse","pageQuestions","setPageQuestions","url","setUrl","fetchData","get","then","RESULT","catch","Error","console","log","resArr","map","push","slice","onChangeResponse","e","idx","prevArray","newArray","target","value","length","Questions","questions","buttonDisabled","setButtonDisabled","checkAllChecked","temp","indexOf","width","question","padding","margin","boxShadow","qitemNo","answerScore01","answer01","answerScore02","answer02","display","justifyContent","onPrevPage","onChangePage","postData","history","pathname","state","answer","res","results","apikey","qestrnSeq","trgetSe","name","location","userName","gender","userGender","school","grade","email","startDtm","String","Date","getTime","answers","post_contents","post","JSON","stringify","headers"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Box,\n  Button,\n  Grid,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Radio,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor:\n      theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#1a90ff\",\n  },\n}))(LinearProgress);\n\nexport default function Test(props) {\n  const [data, setData] = useState([{}]); //전체 데이터\n  const [test, setTest] = useState(\"\"); //문항\n  const [page, setPage] = useState(0); //페이지\n  const [response, setResponse] = useState([]);\n  const [pageQuestions, setPageQuestions] = useState([]); //현재 페이지에 필요한 네 개의 문항을 저장하는 state\n  const [url, setUrl] = useState(\"\");\n\n  function fetchData() {\n    axios\n      .get(\n        \"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\"\n      )\n      .then((response) => {\n        const data = response.data.RESULT;\n        setData(data);\n      })\n      .catch((Error) => {\n        console.log(Error);\n      });\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      let resArr = [];\n      data.map(() => {\n        resArr.push(\"\");\n      });\n      setResponse(resArr);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    //page 가 바뀔 때 pageQuestions 를 page 에 알맞게 설정\n    //예) page 가 1 이라면, 5 ~ 8 번째 문항을 pageQuestions 에 저장\n    setPageQuestions(data.slice(page * 4, page * 4 + 4));\n  }, [page, data]);\n\n  // radio 버튼을 눌러 값을 변경했을 때 response 에 해당 값을 저장하는 함수\n  const onChangeResponse = (e, idx) => {\n    // 현재의 respone를 임시로 저장하는 prevArray 를 선언\n    const prevArray = response;\n    // prevArray 에서 idx (radio 버튼에 해당하는 문항 번호)에 해당하는 원소를 radio의 value로 바꿔주고, 임시로 newArray 에 저장\n    //         prevArray                                      newArray\n    // [\"\", \"\", \"\", \"\", ... , \"\", ..., \"\"] => [\"\", \"\", \"\", \"\", ... , \"radio 버튼의 value\", ..., \"\"]\n    //   0   1   2   3  ...   idx ...  27      0   1   2   3  ...            idx          ...  27\n    const newArray = [\n      ...prevArray.slice(0, idx),\n      e.target.value,\n      ...prevArray.slice(idx + 1, prevArray.length),\n    ];\n    // newArray 를 response 에 적용\n    setResponse(newArray);\n  };\n\n  //현재 페이지에 해당하는 네 개의 문항을 prop로 전달받아서 가져오는 컴포넌트\n  //questions 는 컴포넌트에서 출력할 4개의 문항을 리스트로 받아오는 props\n  const Questions = ({ questions }) => {\n    const [buttonDisabled, setButtonDisabled] = useState(true);\n\n    useEffect(() => {\n      //response 가 바뀔 때(문항을 선택할 때)마다 현재 페이지에 해당하는 4개의 문항에 대해 모두 선택이 되어있는지를 검사\n      checkAllChecked();\n      console.log(response);\n    }, [response]);\n\n    //현재 페이지에 해당하는 4개의 문항에 대해 모두 선택이 되어있는지를 검사\n    const checkAllChecked = () => {\n      //response 에서 현재 페이지에 해당하는 4개의 문항을 리스트로 받아 temp에 임시로 저장\n      const temp = response.slice(page * 4, page * 4 + 4);\n      //temp 에 있는 네 개의 문항을 검사하여 \"\"(빈 문자열)이 하나라도 존재하면 buttonDisabled 에 true 를 저장\n      setButtonDisabled(temp.indexOf(\"\") == -1 ? false : true);\n    };\n\n    //questions: 현재 페이지에 해당하는 네 문항\n    //question: 그 중 한 문항\n    return (\n      <Box style={{ width: \"100%\" }}>\n        <h1>검사 진행</h1>\n\n        {/* 출력할 4개의 문항을 담고 있는 리스트인 questions 를 mapping 하여 하나씩 출력 */}\n        {/* question 은 리스트 중에서 하나의 문항을 의미 */}\n        {/* idx 는 questions 를 mapping 할 때 순서를 담고 있음 */}\n        {questions.map((question, idx) => {\n          return (\n            <Box\n              style={{\n                padding: \"12px 80px\",\n                backgroundColor: \"#F7F7F7\",\n                margin: \"8px 0px\",\n                borderRadius: 4,\n                boxShadow: \"1px 2px 3px rgba(0,0,0,0.1)\",\n              }}\n            >\n              <FormControl style={{ width: \"100%\" }} component=\"fieldset\">\n                <RadioGroup row name={question.qitemNo}>\n                  <Grid container justify=\"center\">\n                    <div>{question.question}</div>\n                    <Grid container justify=\"center\">\n                      <FormControlLabel\n                        value={question.answerScore01}\n                        control={<Radio color=\"primary\" />}\n                        label={question.answer01}\n                        onChange={(e) => {\n                          onChangeResponse(e, page * 4 + idx);\n                        }}\n                        checked={\n                          // response 에 현재 해당하는 문항의 값이 현재 선택지와 일치한다면 checked 를 true로 설정\n                          // idx 는 단순 현재 페이지에서 몇 번째에 해당하는 문항인지를 의미\n                          // page * 4 를 더해줌으로써 실제 문항의 수와 일치하게 만들어줌\n                          // 예) 3페이지의 3번째 문항 = 2 * 4 + 3 = 11번째 문항\n                          response[page * 4 + idx] == question.answerScore01\n                            ? true\n                            : false\n                        }\n                      />\n                      <FormControlLabel\n                        value={question.answerScore02}\n                        control={<Radio color=\"primary\" />}\n                        label={question.answer02}\n                        onChange={(e) => {\n                          onChangeResponse(e, page * 4 + idx);\n                        }}\n                        checked={\n                          response[page * 4 + idx] == question.answerScore02\n                            ? true\n                            : false\n                        }\n                      />\n                    </Grid>\n                  </Grid>\n                </RadioGroup>\n              </FormControl>\n            </Box>\n          );\n        })}\n        <Box style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          {page !== 0 && (\n            <Button variant=\"contained\" color=\"primary\" onClick={onPrevPage}>\n              이전\n            </Button>\n          )}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={buttonDisabled}\n            onClick={onChangePage}\n          >\n            {page == 6 ? \"제출\" : \"다음\"}\n          </Button>\n        </Box>\n      </Box>\n    );\n  };\n\n  //페이지 증가\n  const onChangePage = () => {\n    if (page == 6) {\n      postData();\n    } else {\n      setPage(page + 1);\n    }\n  };\n  useEffect(() => {\n    if (url != \"\") {\n      props.history.push({\n        pathname: \"/end\",\n        state: {\n          url: url,\n        },\n      });\n    }\n  }, [url]);\n  //페이지 감소\n  const onPrevPage = () => {\n    setPage(page - 1);\n  };\n  async function postData() {\n    let answer = \"\";\n    response.map((res, idx) => {\n      if (idx == 27) {\n        answer += \"B\" + (idx + 1) + \"=\" + res;\n      } else {\n        answer += \"B\" + (idx + 1) + \"=\" + res + \" \";\n      }\n    });\n    console.log(answer);\n\n    let results = {\n      apikey: \"5894ecf675f64f28cd358b417ed6ad1b\",\n      qestrnSeq: \"6\",\n      trgetSe: \"100208\",\n      name: props.location.state.userName,\n      gender: props.location.state.userGender,\n      school: \"\",\n      grade: \"\",\n      email: \"\",\n      startDtm: String(new Date().getTime()),\n      answers: answer,\n    };\n\n    const post_contents = await axios.post(\n      \"https://www.career.go.kr/inspct/openapi/test/report\",\n      JSON.stringify(results),\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    setUrl(post_contents.data.RESULT.url);\n  }\n\n  return (\n    <>\n      <Container maxWidth=\"md\">\n        <Grid container justify=\"center\">\n          <Questions questions={pageQuestions} />\n        </Grid>\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}