{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/counselor/src/components/Start.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function User(props) {\n  _s();\n\n  const [data, setData] = useState([{}]);\n\n  async function fetchData() {\n    const response = await axios.get(\"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\");\n  }\n\n  data.map((jsondata, idx) => {\n    // 이런식으로 map함수를 사용해 html코드 안에서 반복문을 돌릴 수 있습니다.\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [idx + 1, \"\\uBC88 \\uB2F5\\uBCC01: \", jsondata.answer01]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [idx + 1, \"\\uBC88 \\uB2F5\\uBCC02: \", jsondata.answer02]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [idx + 1, \"\\uBC88 \\uB2F5\\uBCC03: \", jsondata.answer03]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [idx + 1, \"\\uBC88 \\uB2F5\\uBCC04: \", jsondata.answer04]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  });\n}\n\n_s(User, \"hZeuXr9ZAsNiIKcLFSK3zH9YGME=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/kji/Project/counselor/src/components/Start.js"],"names":["React","useState","useEffect","End","axios","User","props","data","setData","fetchData","response","get","map","jsondata","idx","answer01","answer02","answer03","answer04"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;;AAEA,iBAAeQ,SAAf,GAA2B;AACzB,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CACrB,mGADqB,CAAvB;AAGD;;AAEDJ,EAAAA,IAAI,CAACK,GAAL,CAAS,CAACC,QAAD,EAAWC,GAAX,KAAmB;AAC1B;AACA,wBACE;AAAA,8BACE;AAAA,mBACGA,GAAG,GAAG,CADT,4BACmBD,QAAQ,CAACE,QAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,mBACGD,GAAG,GAAG,CADT,4BACmBD,QAAQ,CAACG,QAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAA,mBACGF,GAAG,GAAG,CADT,4BACmBD,QAAQ,CAACI,QAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAA,mBACGH,GAAG,GAAG,CADT,4BACmBD,QAAQ,CAACK,QAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAaE;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA,oBADF;AAiBD,GAnBD;AAoBD;;GA7BuBb,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\n\nexport default function User(props) {\n  const [data, setData] = useState([{}]);\n\n  async function fetchData() {\n    const response = await axios.get(\n      \"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\"\n    );\n  }\n\n  data.map((jsondata, idx) => {\n    // 이런식으로 map함수를 사용해 html코드 안에서 반복문을 돌릴 수 있습니다.\n    return (\n      <>\n        <div>\n          {idx + 1}번 답변1: {jsondata.answer01}\n        </div>\n        <div>\n          {idx + 1}번 답변2: {jsondata.answer02}\n        </div>\n        <div>\n          {idx + 1}번 답변3: {jsondata.answer03}\n        </div>\n        <div>\n          {idx + 1}번 답변4: {jsondata.answer04}\n        </div>\n        <br></br>\n      </>\n    );\n  });\n}\n"]},"metadata":{},"sourceType":"module"}