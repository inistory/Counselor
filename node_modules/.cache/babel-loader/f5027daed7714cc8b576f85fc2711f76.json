{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/counselor/src/components/Start.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\nimport { Container, Box, Button, Grid, RadioGroup, FormControlLabel, FormControl, FormLabel, Radio } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Start(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [data, setData] = useState([{}]); //전체 데이터\n\n  const [test, setTest] = useState(\"\"); //문항\n\n  const [page, setPage] = useState(0); //페이지\n\n  const [response, setResponse] = useState([]);\n  const [pageQuestions, setPageQuestions] = useState([]);\n\n  function fetchData() {\n    axios.get(\"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\").then(response => {\n      const data = response.data.RESULT;\n      setData(data);\n    }).catch(Error => {\n      console.log(Error);\n    });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (data) {\n      let resArr = [];\n      data.map(hi => {\n        resArr.push(\"\");\n      });\n      setResponse(resArr);\n    }\n  }, [data]);\n  useEffect(() => {\n    setPageQuestions(data.slice(page * 4, page * 4 + 4));\n  }, [page, data]);\n\n  const Questions = ({\n    questions\n  }) => {\n    _s();\n\n    const [buttonActive, setButtonActive] = useState(true);\n    useEffect(() => {\n      checkAllChecked();\n      console.log(radioState);\n    }, [radioState]);\n\n    const onChangeRadio = (e, idx) => {\n      const prevArray = radioState;\n      const newArray = [...prevArray.slice(0, idx), e.target.value, ...prevArray.slice(idx + 1, prevArray.lenght)];\n      setRadioState(newArray);\n    };\n\n    const checkAllChecked = () => {\n      setButtonActive(radioState.indexOf(\"\") == -1 ? false : true);\n    };\n\n    console.log(questions);\n    return /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        width: \"100%\"\n      },\n      children: [questions.map((question, idx) => {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          style: {\n            padding: \"12px 80px\",\n            backgroundColor: \"#F7F7F7\",\n            margin: \"8px 0px\",\n            borderRadius: 4,\n            boxShadow: \"1px 2px 3px rgba(0,0,0,0.1)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            style: {\n              width: \"100%\"\n            },\n            component: \"fieldset\",\n            children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n              row: true,\n              name: question.qitemNo,\n              onChange: e => {\n                onChangeRadio(e, idx);\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                justify: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: question.answerScore01,\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 32\n                  }, this),\n                  label: question.answer01\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: question.answerScore02,\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 32\n                  }, this),\n                  label: question.answer02\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [page !== 0 && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: onPrevPage,\n          children: \"\\uC774\\uC804\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: buttonActive,\n          onClick: onChangePage,\n          children: page == 6 ? \"제출\" : \"다음\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }; //버튼 누르면 다음문항으로 이동\n\n\n  _s(Questions, \"+sbZffVmJq26PuEjPjTFKBGd5Co=\");\n\n  const changePage = () => {\n    console.log(\"다음문항으로이동\");\n  }; //페이지 증가\n\n\n  const onChangePage = () => {\n    if (page == 6) {\n      props.history.push(\"/end\");\n    } else {\n      setPage(page + 1);\n    }\n  };\n\n  const onPrevPage = () => {\n    setPage(page - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Questions, {\n          questions: pageQuestions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // {data.map((jsondata, idx) => {\n//   return (\n//     <>\n//       <div>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name={idx + 1}\n//             value={jsondata.answer01}\n//             onChange={onChangePage}\n//           />\n//           {jsondata.answer01}\n//         </label>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name={idx + 1}\n//             value={jsondata.answer02}\n//             onChange={onChangePage}\n//           />\n//           {jsondata.answer02}\n//         </label>\n//       </div>\n//       <br></br>\n//     </>\n//   );\n// })}\n// <br></br>\n// <br></br>\n\n_s2(Start, \"EiMzD+YtIyhHvkXVI81fso3iUlw=\");\n\n_c = Start;\n\nvar _c;\n\n$RefreshReg$(_c, \"Start\");","map":{"version":3,"sources":["/Users/kji/Project/counselor/src/components/Start.js"],"names":["React","useState","useEffect","End","axios","Container","Box","Button","Grid","RadioGroup","FormControlLabel","FormControl","FormLabel","Radio","Start","props","data","setData","test","setTest","page","setPage","response","setResponse","pageQuestions","setPageQuestions","fetchData","get","then","RESULT","catch","Error","console","log","resArr","map","hi","push","slice","Questions","questions","buttonActive","setButtonActive","checkAllChecked","radioState","onChangeRadio","e","idx","prevArray","newArray","target","value","lenght","setRadioState","indexOf","width","question","padding","backgroundColor","margin","borderRadius","boxShadow","qitemNo","answerScore01","answer01","answerScore02","answer02","display","justifyContent","onPrevPage","onChangePage","changePage","history"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Box,\n  Button,\n  Grid,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Radio,\n} from \"@material-ui/core\";\n\nexport default function Start(props) {\n  const [data, setData] = useState([{}]); //전체 데이터\n  const [test, setTest] = useState(\"\"); //문항\n  const [page, setPage] = useState(0); //페이지\n  const [response, setResponse] = useState([]);\n  const [pageQuestions, setPageQuestions] = useState([]);\n\n  function fetchData() {\n    axios\n      .get(\n        \"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\"\n      )\n      .then((response) => {\n        const data = response.data.RESULT;\n        setData(data);\n      })\n      .catch((Error) => {\n        console.log(Error);\n      });\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      let resArr = [];\n      data.map((hi) => {\n        resArr.push(\"\");\n      });\n      setResponse(resArr);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    setPageQuestions(data.slice(page * 4, page * 4 + 4));\n  }, [page, data]);\n\n  const Questions = ({ questions }) => {\n    const [buttonActive, setButtonActive] = useState(true);\n\n    useEffect(() => {\n      checkAllChecked();\n      console.log(radioState);\n    }, [radioState]);\n\n    const onChangeRadio = (e, idx) => {\n      const prevArray = radioState;\n      const newArray = [\n        ...prevArray.slice(0, idx),\n        e.target.value,\n        ...prevArray.slice(idx + 1, prevArray.lenght),\n      ];\n      setRadioState(newArray);\n    };\n    const checkAllChecked = () => {\n      setButtonActive(radioState.indexOf(\"\") == -1 ? false : true);\n    };\n\n    console.log(questions);\n    return (\n      <Box style={{ width: \"100%\" }}>\n        {questions.map((question, idx) => {\n          return (\n            <Box\n              style={{\n                padding: \"12px 80px\",\n                backgroundColor: \"#F7F7F7\",\n                margin: \"8px 0px\",\n                borderRadius: 4,\n                boxShadow: \"1px 2px 3px rgba(0,0,0,0.1)\",\n              }}\n            >\n              <FormControl style={{ width: \"100%\" }} component=\"fieldset\">\n                <RadioGroup\n                  row\n                  name={question.qitemNo}\n                  onChange={(e) => {\n                    onChangeRadio(e, idx);\n                  }}\n                >\n                  <Grid container justify=\"center\">\n                    <FormControlLabel\n                      value={question.answerScore01}\n                      control={<Radio color=\"primary\" />}\n                      label={question.answer01}\n                    />\n                    <FormControlLabel\n                      value={question.answerScore02}\n                      control={<Radio color=\"primary\" />}\n                      label={question.answer02}\n                    />\n                  </Grid>\n                </RadioGroup>\n              </FormControl>\n            </Box>\n          );\n        })}\n        <Box style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          {page !== 0 && (\n            <Button variant=\"contained\" color=\"primary\" onClick={onPrevPage}>\n              이전\n            </Button>\n          )}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={buttonActive}\n            onClick={onChangePage}\n          >\n            {page == 6 ? \"제출\" : \"다음\"}\n          </Button>\n        </Box>\n      </Box>\n    );\n  };\n\n  //버튼 누르면 다음문항으로 이동\n  const changePage = () => {\n    console.log(\"다음문항으로이동\");\n  };\n  //페이지 증가\n  const onChangePage = () => {\n    if (page == 6) {\n      props.history.push(\"/end\");\n    } else {\n      setPage(page + 1);\n    }\n  };\n\n  const onPrevPage = () => {\n    setPage(page - 1);\n  };\n\n  return (\n    <>\n      <Container maxWidth=\"md\">\n        <Grid container justify=\"center\">\n          <Questions questions={pageQuestions} />\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\n// {data.map((jsondata, idx) => {\n//   return (\n//     <>\n//       <div>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name={idx + 1}\n//             value={jsondata.answer01}\n//             onChange={onChangePage}\n//           />\n//           {jsondata.answer01}\n//         </label>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name={idx + 1}\n//             value={jsondata.answer02}\n//             onChange={onChangePage}\n//           />\n//           {jsondata.answer02}\n//         </label>\n//       </div>\n//       <br></br>\n//     </>\n//   );\n// })}\n\n// <br></br>\n// <br></br>\n"]},"metadata":{},"sourceType":"module"}