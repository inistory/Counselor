{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/counselor/src/components/Start.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function User(props) {\n  _s();\n\n  const [data, setData] = useState([{}]);\n\n  async function fetchData() {\n    const response = await axios.get(\"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\");\n    const content = response.data.RESULT.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \" \"\n    }, c.answer01, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this));\n    setData(content);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []); //   data.map((jsondata, idx) => {\n  // 이런식으로 map함수를 사용해 html코드 안에서 반복문을 돌릴 수 있습니다.\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"\\uBD88\\uB7EC\\uC624\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 49\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(User, \"odp7ftN9IDg1xewk47EaAZiwHYc=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/kji/Project/counselor/src/components/Start.js"],"names":["React","useState","useEffect","End","axios","User","props","data","setData","fetchData","response","get","content","RESULT","map","c","answer01"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;;AAEA,iBAAeQ,SAAf,GAA2B;AACzB,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CACrB,mGADqB,CAAvB;AAGA,UAAMC,OAAO,GAAGF,QAAQ,CAACH,IAAT,CAAcM,MAAd,CAAqBC,GAArB,CAA0BC,CAAD,iBACvC;AAAA;AAAA,OAASA,CAAC,CAACC,QAAX;AAAA;AAAA;AAAA;AAAA,YADc,CAAhB;AAGAR,IAAAA,OAAO,CAACI,OAAD,CAAP;AACD;;AACDV,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT,CAZkC,CAgBlC;AACA;;AACA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,oBAC4C;AAAA;AAAA;AAAA;AAAA,YAD5C,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAmBD;;GArCuBJ,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\n\nexport default function User(props) {\n  const [data, setData] = useState([{}]);\n\n  async function fetchData() {\n    const response = await axios.get(\n      \"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\"\n    );\n    const content = response.data.RESULT.map((c) => (\n      <li key={c.answer01}> </li>\n    ));\n    setData(content);\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  //   data.map((jsondata, idx) => {\n  // 이런식으로 map함수를 사용해 html코드 안에서 반복문을 돌릴 수 있습니다.\n  return (\n    <>\n      <button onClick={fetchData}>불러오기</button> <br />\n      <br />\n      {/* <div>\n          {idx + 1}번 답변1: {jsondata.answer01}\n        </div>\n        <div>\n          {idx + 1}번 답변2: {jsondata.answer02}\n        </div>\n        <div>\n          {idx + 1}번 답변3: {jsondata.answer03}\n        </div>\n        <div>\n          {idx + 1}번 답변4: {jsondata.answer04}\n        </div>\n        <br></br> */}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}