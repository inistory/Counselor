{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/counselor/src/components/Start.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Start(props) {\n  _s();\n\n  const [data, setData] = useState([{}]); //전체 데이터\n\n  const [test, setTest] = useState(\"\"); //문항\n\n  const [page, setPage] = useState(0); //페이지\n\n  const [response, setResponse] = useState([]);\n\n  function fetchData() {\n    axios.get(\"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\").then(response => {\n      const data = response.data.RESULT;\n      setData(data);\n    }).catch(Error => {\n      console.log(Error);\n    });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const Questions = question => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: question.qitemNo,\n          value: question.answer01\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), question.answer01]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: question.qitemNo,\n          value: question.answer02\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), question.answer02]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }; //버튼 누르면 다음문항으로 이동\n\n\n  const changePage = () => {\n    console.log(\"다음문항으로이동\");\n  }; //페이지 증가\n\n\n  const onChangePage = () => {\n    setPage(page + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(data), data.slice(page * 5, page * 5 + 5).map(question => {\n        return /*#__PURE__*/_jsxDEV(Questions, {\n          question: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onChangePage,\n      children: \"\\uB2E4\\uC74C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // {data.map((jsondata, idx) => {\n//   return (\n//     <>\n//       <div>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name={idx + 1}\n//             value={jsondata.answer01}\n//             onChange={onChangePage}\n//           />\n//           {jsondata.answer01}\n//         </label>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name={idx + 1}\n//             value={jsondata.answer02}\n//             onChange={onChangePage}\n//           />\n//           {jsondata.answer02}\n//         </label>\n//       </div>\n//       <br></br>\n//     </>\n//   );\n// })}\n// <br></br>\n// <br></br>\n\n_s(Start, \"q099jw33AziumJSbY2HHiRQVhUM=\");\n\n_c = Start;\n\nvar _c;\n\n$RefreshReg$(_c, \"Start\");","map":{"version":3,"sources":["/Users/kji/Project/counselor/src/components/Start.js"],"names":["React","useState","useEffect","End","axios","Start","props","data","setData","test","setTest","page","setPage","response","setResponse","fetchData","get","then","RESULT","catch","Error","console","log","Questions","question","qitemNo","answer01","answer02","changePage","onChangePage","slice","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC,CADmC,CACK;;AACxC,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC,CAFmC,CAEG;;AACtC,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC,CAHmC,CAGE;;AACrC,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASc,SAAT,GAAqB;AACnBX,IAAAA,KAAK,CACFY,GADH,CAEI,mGAFJ,EAIGC,IAJH,CAISJ,QAAD,IAAc;AAClB,YAAMN,IAAI,GAAGM,QAAQ,CAACN,IAAT,CAAcW,MAA3B;AACAV,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAPH,EAQGY,KARH,CAQUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAVH;AAWD;;AACDlB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMQ,SAAS,GAAIC,QAAD,IAAc;AAC9B,wBACE;AAAA,8BACE;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAEA,QAAQ,CAACC,OAFjB;AAGE,UAAA,KAAK,EAAED,QAAQ,CAACE;AAHlB;AAAA;AAAA;AAAA;AAAA,gBADF,EAMGF,QAAQ,CAACE,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAEF,QAAQ,CAACC,OAFjB;AAGE,UAAA,KAAK,EAAED,QAAQ,CAACG;AAHlB;AAAA;AAAA;AAAA;AAAA,gBADF,EAMGH,QAAQ,CAACG,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD,GArBD,CAvBmC,CA8CnC;;;AACA,QAAMC,UAAU,GAAG,MAAM;AACvBP,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAFD,CA/CmC,CAkDnC;;;AACA,QAAMO,YAAY,GAAG,MAAM;AACzBjB,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA,iBACGU,OAAO,CAACC,GAAR,CAAYf,IAAZ,CADH,EAEGA,IAAI,CAACuB,KAAL,CAAWnB,IAAI,GAAG,CAAlB,EAAqBA,IAAI,GAAG,CAAP,GAAW,CAAhC,EAAmCoB,GAAnC,CAAwCP,QAAD,IAAc;AACpD,4BAAO,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAQ,MAAA,OAAO,EAAEK,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAWD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;GAjGwBxB,K;;KAAAA,K","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\n\nexport default function Start(props) {\n  const [data, setData] = useState([{}]); //전체 데이터\n  const [test, setTest] = useState(\"\"); //문항\n  const [page, setPage] = useState(0); //페이지\n  const [response, setResponse] = useState([]);\n\n  function fetchData() {\n    axios\n      .get(\n        \"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\"\n      )\n      .then((response) => {\n        const data = response.data.RESULT;\n        setData(data);\n      })\n      .catch((Error) => {\n        console.log(Error);\n      });\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const Questions = (question) => {\n    return (\n      <div>\n        <label>\n          <input\n            type=\"radio\"\n            name={question.qitemNo}\n            value={question.answer01}\n          />\n          {question.answer01}\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name={question.qitemNo}\n            value={question.answer02}\n          />\n          {question.answer02}\n        </label>\n      </div>\n    );\n  };\n\n  //버튼 누르면 다음문항으로 이동\n  const changePage = () => {\n    console.log(\"다음문항으로이동\");\n  };\n  //페이지 증가\n  const onChangePage = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <>\n      <div>\n        {console.log(data)}\n        {data.slice(page * 5, page * 5 + 5).map((question) => {\n          return <Questions question={question} />;\n        })}\n      </div>\n      <button onClick={onChangePage}>다음</button>\n    </>\n  );\n}\n\n// {data.map((jsondata, idx) => {\n//   return (\n//     <>\n//       <div>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name={idx + 1}\n//             value={jsondata.answer01}\n//             onChange={onChangePage}\n//           />\n//           {jsondata.answer01}\n//         </label>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name={idx + 1}\n//             value={jsondata.answer02}\n//             onChange={onChangePage}\n//           />\n//           {jsondata.answer02}\n//         </label>\n//       </div>\n//       <br></br>\n//     </>\n//   );\n// })}\n\n// <br></br>\n// <br></br>\n"]},"metadata":{},"sourceType":"module"}