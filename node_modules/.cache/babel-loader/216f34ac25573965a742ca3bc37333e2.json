{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/counselor/src/components/Start.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function User(props) {\n  _s();\n\n  const [data, setData] = useState([{}]);\n\n  async function fetchData() {\n    const response = await axios.get(\"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\").then(response => {\n      const data = response.data.RESULT; // alert(data[0].question) // 자바스크립트로 요소 1개 alert 띄워보기\n      // alert(JSON.stringify(data)) // 자바스크립트로 요소 전체 alert 띄워보기\n\n      setData(data); //state 변수에 데이터 할당\n    }).catch(e => {\n      alert(e);\n    });\n  }\n\n  data.map((jsondata, idx) => {\n    // 이런식으로 map함수를 사용해 html코드 안에서 반복문을 돌릴 수 있습니다.\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        children: \"\\uBD88\\uB7EC\\uC624\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  });\n}\n\n_s(User, \"hZeuXr9ZAsNiIKcLFSK3zH9YGME=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/kji/Project/counselor/src/components/Start.js"],"names":["React","useState","useEffect","End","axios","User","props","data","setData","fetchData","response","get","then","RESULT","catch","e","alert","map","jsondata","idx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;;AAEA,iBAAeQ,SAAf,GAA2B;AACzB,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CACzBO,GADoB,CAEnB,mGAFmB,EAIpBC,IAJoB,CAIdF,QAAD,IAAc;AAClB,YAAMH,IAAI,GAAGG,QAAQ,CAACH,IAAT,CAAcM,MAA3B,CADkB,CAElB;AACA;;AACAL,MAAAA,OAAO,CAACD,IAAD,CAAP,CAJkB,CAIH;AAChB,KAToB,EAUpBO,KAVoB,CAUbC,CAAD,IAAO;AACZC,MAAAA,KAAK,CAACD,CAAD,CAAL;AACD,KAZoB,CAAvB;AAaD;;AAEDR,EAAAA,IAAI,CAACU,GAAL,CAAS,CAACC,QAAD,EAAWC,GAAX,KAAmB;AAC1B;AACA,wBACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEV,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,oBAC4C;AAAA;AAAA;AAAA;AAAA,cAD5C,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAmBD,GArBD;AAsBD;;GAzCuBJ,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\n\nexport default function User(props) {\n  const [data, setData] = useState([{}]);\n\n  async function fetchData() {\n    const response = await axios\n      .get(\n        \"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\"\n      )\n      .then((response) => {\n        const data = response.data.RESULT;\n        // alert(data[0].question) // 자바스크립트로 요소 1개 alert 띄워보기\n        // alert(JSON.stringify(data)) // 자바스크립트로 요소 전체 alert 띄워보기\n        setData(data); //state 변수에 데이터 할당\n      })\n      .catch((e) => {\n        alert(e);\n      });\n  }\n\n  data.map((jsondata, idx) => {\n    // 이런식으로 map함수를 사용해 html코드 안에서 반복문을 돌릴 수 있습니다.\n    return (\n      <>\n        <button onClick={fetchData}>불러오기</button> <br />\n        <br />\n        {/* <div>\n          {idx + 1}번 답변1: {jsondata.answer01}\n        </div>\n        <div>\n          {idx + 1}번 답변2: {jsondata.answer02}\n        </div>\n        <div>\n          {idx + 1}번 답변3: {jsondata.answer03}\n        </div>\n        <div>\n          {idx + 1}번 답변4: {jsondata.answer04}\n        </div>\n        <br></br> */}\n      </>\n    );\n  });\n}\n"]},"metadata":{},"sourceType":"module"}