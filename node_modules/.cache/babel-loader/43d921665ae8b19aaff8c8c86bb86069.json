{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/counselor/src/components/Start.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\nimport { Container, Box, Button, Grid, RadioGroup, FormControlLabel, FormControl } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Start(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [data, setData] = useState([{}]); //전체 데이터\n\n  const [test, setTest] = useState(\"\"); //문항\n\n  const [page, setPage] = useState(0); //페이지\n\n  const [response, setResponse] = useState([]);\n  const [pageQuestions, setPageQuestions] = useState([]);\n\n  function fetchData() {\n    axios.get(\"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\").then(response => {\n      const data = response.data.RESULT;\n      setData(data);\n    }).catch(Error => {\n      console.log(Error);\n    });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    setPageQuestions(data.slice(page * 4, page * 4 + 4));\n  }, [page, data]);\n\n  const Questions = ({\n    questions\n  }) => {\n    _s();\n\n    const [radioState, setRadioState] = useState([\"\", \"\", \"\", \"\"]);\n    const [buttonActive, setButtonActive] = useState(true);\n    useEffect(() => {\n      checkAllChecked();\n      console.log(radioState);\n    }, [radioState]);\n\n    const onChangeRadio = (e, idx) => {\n      const prevArray = radioState;\n      const newArray = [...prevArray.slice(0, idx), e.target.value, ...prevArray.slice(idx + 1, prevArray.lenght)];\n      setRadioState(newArray);\n    };\n\n    const checkAllChecked = () => {\n      setButtonActive(radioState.indexOf(\"\") == -1 ? false : true);\n    };\n\n    console.log(questions);\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [questions.map((question, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              \"aria-label\": \"gender\",\n              name: question.qitemNo,\n              onChange: e => {\n                onChangeRadio(e, idx);\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: question.answerScore01,\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 30\n                }, this),\n                label: question.answer01\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: question.answerScore02,\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 30\n                }, this),\n                label: question.answer02\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this);\n      }), page !== 0 && /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          justifySelf: \"flex-start\"\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: onPrevPage,\n        children: \"\\uC774\\uC804\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          justifySelf: \"flex-end\"\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: buttonActive,\n        onClick: onChangePage,\n        children: page == 6 ? \"제출\" : \"다음\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }; //버튼 누르면 다음문항으로 이동\n\n\n  _s(Questions, \"jFFJuOoOm/TMWQEROHjHuAmCCNw=\");\n\n  const changePage = () => {\n    console.log(\"다음문항으로이동\");\n  }; //페이지 증가\n\n\n  const onChangePage = () => {\n    if (page == 6) {\n      props.history.push(\"/end\");\n    } else {\n      setPage(page + 1);\n    }\n  };\n\n  const onPrevPage = () => {\n    setPage(page - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Questions, {\n          questions: pageQuestions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // {data.map((jsondata, idx) => {\n//   return (\n//     <>\n//       <div>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name={idx + 1}\n//             value={jsondata.answer01}\n//             onChange={onChangePage}\n//           />\n//           {jsondata.answer01}\n//         </label>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name={idx + 1}\n//             value={jsondata.answer02}\n//             onChange={onChangePage}\n//           />\n//           {jsondata.answer02}\n//         </label>\n//       </div>\n//       <br></br>\n//     </>\n//   );\n// })}\n// <br></br>\n// <br></br>\n\n_s2(Start, \"4Jh1+U3cO01QpJFFAH5QZDiJ5m0=\");\n\n_c = Start;\n\nvar _c;\n\n$RefreshReg$(_c, \"Start\");","map":{"version":3,"sources":["/Users/kji/Project/counselor/src/components/Start.js"],"names":["React","useState","useEffect","End","axios","Container","Box","Button","Grid","RadioGroup","FormControlLabel","FormControl","Start","props","data","setData","test","setTest","page","setPage","response","setResponse","pageQuestions","setPageQuestions","fetchData","get","then","RESULT","catch","Error","console","log","slice","Questions","questions","radioState","setRadioState","buttonActive","setButtonActive","checkAllChecked","onChangeRadio","e","idx","prevArray","newArray","target","value","lenght","indexOf","map","question","qitemNo","answerScore01","answer01","answerScore02","answer02","justifySelf","onPrevPage","onChangePage","changePage","history","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Box,\n  Button,\n  Grid,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n} from \"@material-ui/core\";\n\nexport default function Start(props) {\n  const [data, setData] = useState([{}]); //전체 데이터\n  const [test, setTest] = useState(\"\"); //문항\n  const [page, setPage] = useState(0); //페이지\n  const [response, setResponse] = useState([]);\n  const [pageQuestions, setPageQuestions] = useState([]);\n\n  function fetchData() {\n    axios\n      .get(\n        \"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\"\n      )\n      .then((response) => {\n        const data = response.data.RESULT;\n        setData(data);\n      })\n      .catch((Error) => {\n        console.log(Error);\n      });\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    setPageQuestions(data.slice(page * 4, page * 4 + 4));\n  }, [page, data]);\n\n  const Questions = ({ questions }) => {\n    const [radioState, setRadioState] = useState([\"\", \"\", \"\", \"\"]);\n    const [buttonActive, setButtonActive] = useState(true);\n\n    useEffect(() => {\n      checkAllChecked();\n      console.log(radioState);\n    }, [radioState]);\n\n    const onChangeRadio = (e, idx) => {\n      const prevArray = radioState;\n      const newArray = [\n        ...prevArray.slice(0, idx),\n        e.target.value,\n        ...prevArray.slice(idx + 1, prevArray.lenght),\n      ];\n      setRadioState(newArray);\n    };\n    const checkAllChecked = () => {\n      setButtonActive(radioState.indexOf(\"\") == -1 ? false : true);\n    };\n\n    console.log(questions);\n    return (\n      <Box>\n        {questions.map((question, idx) => {\n          return (\n            <div>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Gender</FormLabel>\n                <RadioGroup\n                  aria-label=\"gender\"\n                  name={question.qitemNo}\n                  onChange={(e) => {\n                    onChangeRadio(e, idx);\n                  }}\n                >\n                  <FormControlLabel\n                    value={question.answerScore01}\n                    control={<Radio />}\n                    label={question.answer01}\n                  />\n                  <FormControlLabel\n                    value={question.answerScore02}\n                    control={<Radio />}\n                    label={question.answer02}\n                  />\n                </RadioGroup>\n              </FormControl>\n\n              {/* <label>\n                <Radio\n                  name={question.qitemNo}\n                  value={question.answerScore01}\n                  onChange={(e) => {\n                    onChangeRadio(e, idx);\n                  }}\n                />\n                {question.answer01}\n              </label>\n              <label>\n                <Radio\n                  name={question.qitemNo}\n                  value={question.answerScore02}\n                  onChange={(e) => {\n                    onChangeRadio(e, idx);\n                  }}\n                />\n                {question.answer02}\n              </label> */}\n            </div>\n          );\n        })}\n        {page !== 0 && (\n          <Button\n            style={{ justifySelf: \"flex-start\" }}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onPrevPage}\n          >\n            이전\n          </Button>\n        )}\n        <Button\n          style={{ justifySelf: \"flex-end\" }}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={buttonActive}\n          onClick={onChangePage}\n        >\n          {page == 6 ? \"제출\" : \"다음\"}\n        </Button>\n      </Box>\n    );\n  };\n\n  //버튼 누르면 다음문항으로 이동\n  const changePage = () => {\n    console.log(\"다음문항으로이동\");\n  };\n  //페이지 증가\n  const onChangePage = () => {\n    if (page == 6) {\n      props.history.push(\"/end\");\n    } else {\n      setPage(page + 1);\n    }\n  };\n\n  const onPrevPage = () => {\n    setPage(page - 1);\n  };\n\n  return (\n    <>\n      <Container>\n        <Grid container justify=\"center\">\n          <Questions questions={pageQuestions} />\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\n// {data.map((jsondata, idx) => {\n//   return (\n//     <>\n//       <div>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name={idx + 1}\n//             value={jsondata.answer01}\n//             onChange={onChangePage}\n//           />\n//           {jsondata.answer01}\n//         </label>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name={idx + 1}\n//             value={jsondata.answer02}\n//             onChange={onChangePage}\n//           />\n//           {jsondata.answer02}\n//         </label>\n//       </div>\n//       <br></br>\n//     </>\n//   );\n// })}\n\n// <br></br>\n// <br></br>\n"]},"metadata":{},"sourceType":"module"}