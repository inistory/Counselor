{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/counselor/src/components/Start.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\nimport { Container, Box, Button, Grid, RadioGroup, FormControlLabel, FormControl, FormLabel, Radio } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Start(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [data, setData] = useState([{}]); //전체 데이터\n\n  const [test, setTest] = useState(\"\"); //문항\n\n  const [page, setPage] = useState(0); //페이지\n\n  const [response, setResponse] = useState([]);\n  const [pageQuestions, setPageQuestions] = useState([]);\n\n  function fetchData() {\n    axios.get(\"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\").then(response => {\n      const data = response.data.RESULT;\n      setData(data);\n    }).catch(Error => {\n      console.log(Error);\n    });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (data) {\n      let resArr = [];\n      data.map(() => {\n        resArr.push(\"\");\n      });\n      setResponse(resArr);\n    }\n  }, [data]);\n  useEffect(() => {\n    setPageQuestions(data.slice(page * 4, page * 4 + 4));\n  }, [page, data]);\n\n  const onChangeResponse = (e, idx) => {\n    const prevArray = response;\n    const newArray = [...prevArray.slice(0, idx), e.target.value, ...prevArray.slice(idx + 1, prevArray.lenght)];\n    setResponse(newArray);\n  };\n\n  const Questions = ({\n    questions\n  }) => {\n    _s();\n\n    const [buttonActive, setButtonActive] = useState(true);\n    useEffect(() => {\n      checkAllChecked();\n      console.log(response);\n    }, [response]); // const onChangeRadio = (e, idx) => {\n    //   const prevArray = radioState;\n    //   const newArray = [\n    //     ...prevArray.slice(0, idx),\n    //     e.target.value,\n    //     ...prevArray.slice(idx + 1, prevArray.lenght),\n    //   ];\n    //   setRadioState(newArray);\n    // };\n\n    const checkAllChecked = () => {\n      const temp = response.slice(page * 4, page * 4 + 4);\n      setButtonActive(temp.indexOf(\"\") == -1 ? false : true);\n    };\n\n    console.log(questions);\n    return /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uAC80\\uC0AC \\uC9C4\\uD589\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), questions.map((question, idx) => {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          style: {\n            padding: \"12px 80px\",\n            backgroundColor: \"#F7F7F7\",\n            margin: \"8px 0px\",\n            borderRadius: 4,\n            boxShadow: \"1px 2px 3px rgba(0,0,0,0.1)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            style: {\n              width: \"100%\"\n            },\n            component: \"fieldset\",\n            children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n              row: true,\n              name: question.qitemNo,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: question.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                justify: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: question.answerScore01,\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 32\n                  }, this),\n                  label: question.answer01,\n                  onChange: e => {\n                    onChangeResponse(e, page * 4 + idx);\n                  },\n                  checked: response[page * 4 + idx] == question.answerScore01 ? true : false\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: question.answerScore02,\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 32\n                  }, this),\n                  label: question.answer02,\n                  onChange: e => {\n                    onChangeResponse(e, page * 4 + idx);\n                  },\n                  checked: response[page * 4 + idx] == question.answerScore02 ? true : false\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [page !== 0 && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: onPrevPage,\n          children: \"\\uC774\\uC804\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: buttonActive,\n          onClick: onChangePage,\n          children: page == 6 ? \"제출\" : \"다음\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }; //페이지 증가\n\n\n  _s(Questions, \"+sbZffVmJq26PuEjPjTFKBGd5Co=\");\n\n  const onChangePage = () => {\n    if (page == 6) {\n      props.history.push(\"/end\");\n    } else {\n      setPage(page + 1);\n    }\n  }; //페이지 감소\n\n\n  const onPrevPage = () => {\n    setPage(page - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Questions, {\n          questions: pageQuestions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s2(Start, \"EiMzD+YtIyhHvkXVI81fso3iUlw=\");\n\n_c = Start;\n\nvar _c;\n\n$RefreshReg$(_c, \"Start\");","map":{"version":3,"sources":["/Users/kji/Project/counselor/src/components/Start.js"],"names":["React","useState","useEffect","End","axios","Container","Box","Button","Grid","RadioGroup","FormControlLabel","FormControl","FormLabel","Radio","Start","props","data","setData","test","setTest","page","setPage","response","setResponse","pageQuestions","setPageQuestions","fetchData","get","then","RESULT","catch","Error","console","log","resArr","map","push","slice","onChangeResponse","e","idx","prevArray","newArray","target","value","lenght","Questions","questions","buttonActive","setButtonActive","checkAllChecked","temp","indexOf","width","question","padding","backgroundColor","margin","borderRadius","boxShadow","qitemNo","answerScore01","answer01","answerScore02","answer02","display","justifyContent","onPrevPage","onChangePage","history"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,UALF,EAMEC,gBANF,EAOEC,WAPF,EAQEC,SARF,EASEC,KATF,QAUO,mBAVP;;;AAYA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAAA;;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC,CADmC,CACK;;AACxC,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC,CAFmC,CAEG;;AACtC,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,CAAD,CAAhC,CAHmC,CAGE;;AACrC,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACuB,aAAD,EAAgBC,gBAAhB,IAAoCxB,QAAQ,CAAC,EAAD,CAAlD;;AAEA,WAASyB,SAAT,GAAqB;AACnBtB,IAAAA,KAAK,CACFuB,GADH,CAEI,mGAFJ,EAIGC,IAJH,CAISN,QAAD,IAAc;AAClB,YAAMN,IAAI,GAAGM,QAAQ,CAACN,IAAT,CAAca,MAA3B;AACAZ,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAPH,EAQGc,KARH,CAQUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAVH;AAWD;;AACD7B,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIAxB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,IAAJ,EAAU;AACR,UAAIkB,MAAM,GAAG,EAAb;AACAlB,MAAAA,IAAI,CAACmB,GAAL,CAAS,MAAM;AACbD,QAAAA,MAAM,CAACE,IAAP,CAAY,EAAZ;AACD,OAFD;AAGAb,MAAAA,WAAW,CAACW,MAAD,CAAX;AACD;AACF,GARQ,EAQN,CAAClB,IAAD,CARM,CAAT;AAUAd,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,gBAAgB,CAACT,IAAI,CAACqB,KAAL,CAAWjB,IAAI,GAAG,CAAlB,EAAqBA,IAAI,GAAG,CAAP,GAAW,CAAhC,CAAD,CAAhB;AACD,GAFQ,EAEN,CAACA,IAAD,EAAOJ,IAAP,CAFM,CAAT;;AAIA,QAAMsB,gBAAgB,GAAG,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACnC,UAAMC,SAAS,GAAGnB,QAAlB;AACA,UAAMoB,QAAQ,GAAG,CACf,GAAGD,SAAS,CAACJ,KAAV,CAAgB,CAAhB,EAAmBG,GAAnB,CADY,EAEfD,CAAC,CAACI,MAAF,CAASC,KAFM,EAGf,GAAGH,SAAS,CAACJ,KAAV,CAAgBG,GAAG,GAAG,CAAtB,EAAyBC,SAAS,CAACI,MAAnC,CAHY,CAAjB;AAKAtB,IAAAA,WAAW,CAACmB,QAAD,CAAX;AACD,GARD;;AAUA,QAAMI,SAAS,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAmB;AAAA;;AACnC,UAAM,CAACC,YAAD,EAAeC,eAAf,IAAkChD,QAAQ,CAAC,IAAD,CAAhD;AAEAC,IAAAA,SAAS,CAAC,MAAM;AACdgD,MAAAA,eAAe;AACflB,MAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACD,KAHQ,EAGN,CAACA,QAAD,CAHM,CAAT,CAHmC,CAQnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAM4B,eAAe,GAAG,MAAM;AAC5B,YAAMC,IAAI,GAAG7B,QAAQ,CAACe,KAAT,CAAejB,IAAI,GAAG,CAAtB,EAAyBA,IAAI,GAAG,CAAP,GAAW,CAApC,CAAb;AACA6B,MAAAA,eAAe,CAACE,IAAI,CAACC,OAAL,CAAa,EAAb,KAAoB,CAAC,CAArB,GAAyB,KAAzB,GAAiC,IAAlC,CAAf;AACD,KAHD;;AAKApB,IAAAA,OAAO,CAACC,GAAR,CAAYc,SAAZ;AACA,wBACE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGN,SAAS,CAACZ,GAAV,CAAc,CAACmB,QAAD,EAAWd,GAAX,KAAmB;AAChC,4BACE,QAAC,GAAD;AACE,UAAA,KAAK,EAAE;AACLe,YAAAA,OAAO,EAAE,WADJ;AAELC,YAAAA,eAAe,EAAE,SAFZ;AAGLC,YAAAA,MAAM,EAAE,SAHH;AAILC,YAAAA,YAAY,EAAE,CAJT;AAKLC,YAAAA,SAAS,EAAE;AALN,WADT;AAAA,iCASE,QAAC,WAAD;AAAa,YAAA,KAAK,EAAE;AAAEN,cAAAA,KAAK,EAAE;AAAT,aAApB;AAAuC,YAAA,SAAS,EAAC,UAAjD;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,GAAG,MAAf;AAAgB,cAAA,IAAI,EAAEC,QAAQ,CAACM,OAA/B;AAAA,sCACE;AAAA,0BAAMN,QAAQ,CAACA;AAAf;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,OAAO,EAAC,QAAxB;AAAA,wCACE,QAAC,gBAAD;AACE,kBAAA,KAAK,EAAEA,QAAQ,CAACO,aADlB;AAEE,kBAAA,OAAO,eAAE,QAAC,KAAD;AAAO,oBAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,0BAFX;AAGE,kBAAA,KAAK,EAAEP,QAAQ,CAACQ,QAHlB;AAIE,kBAAA,QAAQ,EAAGvB,CAAD,IAAO;AACfD,oBAAAA,gBAAgB,CAACC,CAAD,EAAInB,IAAI,GAAG,CAAP,GAAWoB,GAAf,CAAhB;AACD,mBANH;AAOE,kBAAA,OAAO,EACLlB,QAAQ,CAACF,IAAI,GAAG,CAAP,GAAWoB,GAAZ,CAAR,IAA4Bc,QAAQ,CAACO,aAArC,GACI,IADJ,GAEI;AAVR;AAAA;AAAA;AAAA;AAAA,wBADF,eAcE,QAAC,gBAAD;AACE,kBAAA,KAAK,EAAEP,QAAQ,CAACS,aADlB;AAEE,kBAAA,OAAO,eAAE,QAAC,KAAD;AAAO,oBAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,0BAFX;AAGE,kBAAA,KAAK,EAAET,QAAQ,CAACU,QAHlB;AAIE,kBAAA,QAAQ,EAAGzB,CAAD,IAAO;AACfD,oBAAAA,gBAAgB,CAACC,CAAD,EAAInB,IAAI,GAAG,CAAP,GAAWoB,GAAf,CAAhB;AACD,mBANH;AAOE,kBAAA,OAAO,EACLlB,QAAQ,CAACF,IAAI,GAAG,CAAP,GAAWoB,GAAZ,CAAR,IAA4Bc,QAAQ,CAACS,aAArC,GACI,IADJ,GAEI;AAVR;AAAA;AAAA;AAAA;AAAA,wBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,gBADF;AA6CD,OA9CA,CAFH,eAiDE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEE,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE;AAAnC,SAAZ;AAAA,mBACG9C,IAAI,KAAK,CAAT,iBACC,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,KAAK,EAAC,SAAlC;AAA4C,UAAA,OAAO,EAAE+C,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAME,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,QAAQ,EAAEnB,YAHZ;AAIE,UAAA,OAAO,EAAEoB,YAJX;AAAA,oBAMGhD,IAAI,IAAI,CAAR,GAAY,IAAZ,GAAmB;AANtB;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmED,GA1FD,CAhDmC,CA4InC;;;AA5ImC,KAgD7B0B,SAhD6B;;AA6InC,QAAMsB,YAAY,GAAG,MAAM;AACzB,QAAIhD,IAAI,IAAI,CAAZ,EAAe;AACbL,MAAAA,KAAK,CAACsD,OAAN,CAAcjC,IAAd,CAAmB,MAAnB;AACD,KAFD,MAEO;AACLf,MAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD;AACF,GAND,CA7ImC,CAqJnC;;;AACA,QAAM+C,UAAU,GAAG,MAAM;AACvB9C,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAC,QAAxB;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEI;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD;;IAnKuBV,K;;KAAAA,K","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Box,\n  Button,\n  Grid,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Radio,\n} from \"@material-ui/core\";\n\nexport default function Start(props) {\n  const [data, setData] = useState([{}]); //전체 데이터\n  const [test, setTest] = useState(\"\"); //문항\n  const [page, setPage] = useState(0); //페이지\n  const [response, setResponse] = useState([]);\n  const [pageQuestions, setPageQuestions] = useState([]);\n\n  function fetchData() {\n    axios\n      .get(\n        \"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\"\n      )\n      .then((response) => {\n        const data = response.data.RESULT;\n        setData(data);\n      })\n      .catch((Error) => {\n        console.log(Error);\n      });\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      let resArr = [];\n      data.map(() => {\n        resArr.push(\"\");\n      });\n      setResponse(resArr);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    setPageQuestions(data.slice(page * 4, page * 4 + 4));\n  }, [page, data]);\n\n  const onChangeResponse = (e, idx) => {\n    const prevArray = response;\n    const newArray = [\n      ...prevArray.slice(0, idx),\n      e.target.value,\n      ...prevArray.slice(idx + 1, prevArray.lenght),\n    ];\n    setResponse(newArray);\n  };\n\n  const Questions = ({ questions }) => {\n    const [buttonActive, setButtonActive] = useState(true);\n\n    useEffect(() => {\n      checkAllChecked();\n      console.log(response);\n    }, [response]);\n\n    // const onChangeRadio = (e, idx) => {\n    //   const prevArray = radioState;\n    //   const newArray = [\n    //     ...prevArray.slice(0, idx),\n    //     e.target.value,\n    //     ...prevArray.slice(idx + 1, prevArray.lenght),\n    //   ];\n    //   setRadioState(newArray);\n    // };\n    const checkAllChecked = () => {\n      const temp = response.slice(page * 4, page * 4 + 4);\n      setButtonActive(temp.indexOf(\"\") == -1 ? false : true);\n    };\n\n    console.log(questions);\n    return (\n      <Box style={{ width: \"100%\" }}>\n        <p>검사 진행</p>\n        {questions.map((question, idx) => {\n          return (\n            <Box\n              style={{\n                padding: \"12px 80px\",\n                backgroundColor: \"#F7F7F7\",\n                margin: \"8px 0px\",\n                borderRadius: 4,\n                boxShadow: \"1px 2px 3px rgba(0,0,0,0.1)\",\n              }}\n            >\n              <FormControl style={{ width: \"100%\" }} component=\"fieldset\">\n                <RadioGroup row name={question.qitemNo}>\n                  <div>{question.question}</div>\n                  <Grid container justify=\"center\">\n                    <FormControlLabel\n                      value={question.answerScore01}\n                      control={<Radio color=\"primary\" />}\n                      label={question.answer01}\n                      onChange={(e) => {\n                        onChangeResponse(e, page * 4 + idx);\n                      }}\n                      checked={\n                        response[page * 4 + idx] == question.answerScore01\n                          ? true\n                          : false\n                      }\n                    />\n                    <FormControlLabel\n                      value={question.answerScore02}\n                      control={<Radio color=\"primary\" />}\n                      label={question.answer02}\n                      onChange={(e) => {\n                        onChangeResponse(e, page * 4 + idx);\n                      }}\n                      checked={\n                        response[page * 4 + idx] == question.answerScore02\n                          ? true\n                          : false\n                      }\n                    />\n                  </Grid>\n                </RadioGroup>\n              </FormControl>\n            </Box>\n          );\n        })}\n        <Box style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          {page !== 0 && (\n            <Button variant=\"contained\" color=\"primary\" onClick={onPrevPage}>\n              이전\n            </Button>\n          )}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={buttonActive}\n            onClick={onChangePage}\n          >\n            {page == 6 ? \"제출\" : \"다음\"}\n          </Button>\n        </Box>\n      </Box>\n    );\n  };\n\n  //페이지 증가\n  const onChangePage = () => {\n    if (page == 6) {\n      props.history.push(\"/end\");\n    } else {\n      setPage(page + 1);\n    }\n  };\n\n  //페이지 감소\n  const onPrevPage = () => {\n    setPage(page - 1);\n  };\n\n  return (\n    <>\n      <Container maxWidth=\"md\">\n        <Grid container justify=\"center\">\n          <Questions questions={pageQuestions} />\n        </Grid>\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}