{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/counselor/src/components/Start.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Start(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [data, setData] = useState([{}]); //전체 데이터\n\n  const [test, setTest] = useState(\"\"); //문항\n\n  const [page, setPage] = useState(0); //페이지\n\n  const [response, setResponse] = useState([]);\n  const [pageQuestions, setPageQuestions] = useState([]);\n\n  function fetchData() {\n    axios.get(\"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\").then(response => {\n      const data = response.data.RESULT;\n      setData(data);\n    }).catch(Error => {\n      console.log(Error);\n    });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    setPageQuestions(data.slice(page * 5, page * 5 + 5));\n  }, [page, data]);\n\n  const Questions = ({\n    questions\n  }) => {\n    _s();\n\n    const [radioState, setRadioState] = useState([\"\", \"\", \"\", \"\", \"\"]);\n    useEffect(() => {\n      console.log(radioState);\n    }, [radioState]);\n\n    const onChangeRadio = (e, idx) => {\n      const prevArray = radioState;\n      const newArray = [...prevArray.slice(0, idx), e.target.value, ...prevArray.slice(idx + 1, prevArray.lenght)];\n      setRadioState(newArray);\n    };\n\n    console.log(questions);\n    return questions.map((question, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: question.qitemNo,\n            value: question.answerScore01,\n            onChange: e => {\n              onChangeRadio(e, idx);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), question.answer01]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: question.qitemNo,\n            value: question.answerScore02,\n            onChange: e => {\n              onChangeRadio(e, idx);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), question.answer02]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this);\n    });\n\n    /*#__PURE__*/\n    _jsxDEV(\"button\", {\n      disabled: radioState.a == \"\" ? true : false,\n      onClick: onChangePage,\n      children: \"\\uB2E4\\uC74C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this);\n  }; //버튼 누르면 다음문항으로 이동\n\n\n  _s(Questions, \"C7/MiHSMIRsF3PtZtYSqPD6Rh1s=\");\n\n  const changePage = () => {\n    console.log(\"다음문항으로이동\");\n  }; //페이지 증가\n\n\n  const onChangePage = () => {\n    setPage(page + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Questions, {\n        questions: pageQuestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // {data.map((jsondata, idx) => {\n//   return (\n//     <>\n//       <div>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name={idx + 1}\n//             value={jsondata.answer01}\n//             onChange={onChangePage}\n//           />\n//           {jsondata.answer01}\n//         </label>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name={idx + 1}\n//             value={jsondata.answer02}\n//             onChange={onChangePage}\n//           />\n//           {jsondata.answer02}\n//         </label>\n//       </div>\n//       <br></br>\n//     </>\n//   );\n// })}\n// <br></br>\n// <br></br>\n\n_s2(Start, \"4Jh1+U3cO01QpJFFAH5QZDiJ5m0=\");\n\n_c = Start;\n\nvar _c;\n\n$RefreshReg$(_c, \"Start\");","map":{"version":3,"sources":["/Users/kji/Project/counselor/src/components/Start.js"],"names":["React","useState","useEffect","End","axios","Start","props","data","setData","test","setTest","page","setPage","response","setResponse","pageQuestions","setPageQuestions","fetchData","get","then","RESULT","catch","Error","console","log","slice","Questions","questions","radioState","setRadioState","onChangeRadio","e","idx","prevArray","newArray","target","value","lenght","map","question","qitemNo","answerScore01","answer01","answerScore02","answer02","a","onChangePage","changePage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\n\nexport default function Start(props) {\n  const [data, setData] = useState([{}]); //전체 데이터\n  const [test, setTest] = useState(\"\"); //문항\n  const [page, setPage] = useState(0); //페이지\n  const [response, setResponse] = useState([]);\n  const [pageQuestions, setPageQuestions] = useState([]);\n\n  function fetchData() {\n    axios\n      .get(\n        \"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\"\n      )\n      .then((response) => {\n        const data = response.data.RESULT;\n        setData(data);\n      })\n      .catch((Error) => {\n        console.log(Error);\n      });\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    setPageQuestions(data.slice(page * 5, page * 5 + 5));\n  }, [page, data]);\n\n  const Questions = ({ questions }) => {\n    const [radioState, setRadioState] = useState([\"\", \"\", \"\", \"\", \"\"]);\n\n    useEffect(() => {\n      console.log(radioState);\n    }, [radioState]);\n\n    const onChangeRadio = (e, idx) => {\n      const prevArray = radioState;\n      const newArray = [\n        ...prevArray.slice(0, idx),\n        e.target.value,\n        ...prevArray.slice(idx + 1, prevArray.lenght),\n      ];\n      setRadioState(newArray);\n    };\n\n    console.log(questions);\n    return questions.map((question, idx) => {\n      return (\n        <div>\n          <label>\n            <input\n              type=\"radio\"\n              name={question.qitemNo}\n              value={question.answerScore01}\n              onChange={(e) => {\n                onChangeRadio(e, idx);\n              }}\n            />\n            {question.answer01}\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name={question.qitemNo}\n              value={question.answerScore02}\n              onChange={(e) => {\n                onChangeRadio(e, idx);\n              }}\n            />\n            {question.answer02}\n          </label>\n        </div>\n      );\n    });\n    <button disabled={radioState.a == \"\" ? true : false} onClick={onChangePage}>\n      다음\n    </button>;\n  };\n\n  //버튼 누르면 다음문항으로 이동\n  const changePage = () => {\n    console.log(\"다음문항으로이동\");\n  };\n  //페이지 증가\n  const onChangePage = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <>\n      <div>\n        <Questions questions={pageQuestions} />\n      </div>\n    </>\n  );\n}\n\n// {data.map((jsondata, idx) => {\n//   return (\n//     <>\n//       <div>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name={idx + 1}\n//             value={jsondata.answer01}\n//             onChange={onChangePage}\n//           />\n//           {jsondata.answer01}\n//         </label>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name={idx + 1}\n//             value={jsondata.answer02}\n//             onChange={onChangePage}\n//           />\n//           {jsondata.answer02}\n//         </label>\n//       </div>\n//       <br></br>\n//     </>\n//   );\n// })}\n\n// <br></br>\n// <br></br>\n"]},"metadata":{},"sourceType":"module"}