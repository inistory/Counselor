{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/counselor/src/components/Start.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function User(props) {\n  _s();\n\n  const [data, setData] = useState([{}]);\n\n  function fetchData() {\n    axios.get(\"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\").then(response => {\n      const data = response.data.RESULT; // console.log(data[0].question); // 자바스크립트로 요소 1개 alert 띄워보기\n      // console.log(JSON.stringify(data)); // 자바스크립트로 요소 전체 alert 띄워보기\n\n      setData(data);\n    }).catch(Error => {\n      console.log(Error);\n    });\n  } //html 코드가 return 된 이후에 한번만 GetOpenAPI() 함수를 호출\n\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container\",\n      children: [\"\\uBB38\\uD56D\", data.map((jsondata, idx) => {\n        // 이런식으로 map함수를 사용해 html코드 안에서 반복문을 돌릴 수 있습니다.\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"test\",\n                value: \"1\",\n                onChange: onChangeTest\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this), jsondata.answer01]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"test\",\n                value: \"2\",\n                onChange: onChangeTest\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), jsondata.answer02]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(User, \"odp7ftN9IDg1xewk47EaAZiwHYc=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/kji/Project/counselor/src/components/Start.js"],"names":["React","useState","useEffect","End","axios","User","props","data","setData","fetchData","get","then","response","RESULT","catch","Error","console","log","map","jsondata","idx","onChangeTest","answer01","answer02"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;;AAEA,WAASQ,SAAT,GAAqB;AACnBL,IAAAA,KAAK,CACFM,GADH,CAEI,mGAFJ,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClB,YAAML,IAAI,GAAGK,QAAQ,CAACL,IAAT,CAAcM,MAA3B,CADkB,CAElB;AACA;;AACAL,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KATH,EAUGO,KAVH,CAUUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAZH;AAaD,GAjBiC,CAkBlC;;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,iCAEGF,IAAI,CAACW,GAAL,CAAS,CAACC,QAAD,EAAWC,GAAX,KAAmB;AAC3B;AACA,4BACE;AAAA,kCACE;AAAA,oCACE;AAAA,sCACE;AACE,gBAAA,IAAI,EAAC,OADP;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,KAAK,EAAC,GAHR;AAIE,gBAAA,QAAQ,EAAEC;AAJZ;AAAA;AAAA;AAAA;AAAA,sBADF,EAOGF,QAAQ,CAACG,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE;AAAA,sCACE;AACE,gBAAA,IAAI,EAAC,OADP;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,KAAK,EAAC,GAHR;AAIE,gBAAA,QAAQ,EAAED;AAJZ;AAAA;AAAA;AAAA;AAAA,sBADF,EAOGF,QAAQ,CAACI,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAiCE;AAAA;AAAA;AAAA;AAAA,kBAjCF;AAAA,wBADF;AAqCD,OAvCA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgDD;;GAvEuBlB,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\n\nexport default function User(props) {\n  const [data, setData] = useState([{}]);\n\n  function fetchData() {\n    axios\n      .get(\n        \"http://www.career.go.kr/inspct/openapi/test/questions?apikey=5894ecf675f64f28cd358b417ed6ad1b&q=6\"\n      )\n      .then((response) => {\n        const data = response.data.RESULT;\n        // console.log(data[0].question); // 자바스크립트로 요소 1개 alert 띄워보기\n        // console.log(JSON.stringify(data)); // 자바스크립트로 요소 전체 alert 띄워보기\n        setData(data);\n      })\n      .catch((Error) => {\n        console.log(Error);\n      });\n  }\n  //html 코드가 return 된 이후에 한번만 GetOpenAPI() 함수를 호출\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <div className=\"body-container\">\n        문항\n        {data.map((jsondata, idx) => {\n          // 이런식으로 map함수를 사용해 html코드 안에서 반복문을 돌릴 수 있습니다.\n          return (\n            <>\n              <div>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"test\"\n                    value=\"1\"\n                    onChange={onChangeTest}\n                  />\n                  {jsondata.answer01}\n                </label>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"test\"\n                    value=\"2\"\n                    onChange={onChangeTest}\n                  />\n                  {jsondata.answer02}\n                </label>\n              </div>\n              {/* <div>\n                {idx + 1}번 답변1: {jsondata.answer01}\n              </div>\n              <div>\n                {idx + 1}번 답변2: {jsondata.answer02}\n              </div> */}\n              {/* <div>\n                {idx + 1}번 답변3: {jsondata.answer03}\n              </div>\n              <div>\n                {idx + 1}번 답변4: {jsondata.answer04}\n              </div> */}\n              <br></br>\n            </>\n          );\n        })}\n        {/*  AFTER END 20210525 ========================================================= */}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}