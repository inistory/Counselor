{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/counselor/src/components/Start.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function User(props) {\n  _s();\n\n  const [data, setData] = useState([{}]);\n\n  function fetchData() {\n    axios.get(\"http://www.career.go.kr/inspct/openapi/test/questions?apikey=f96b530595b6dccabaed517667511170&q=6\").then(response => {\n      const data = response.data.RESULT;\n      console.log(data[0].question); // 자바스크립트로 요소 1개 alert 띄워보기\n\n      console.log(JSON.stringify(data)); // 자바스크립트로 요소 전체 alert 띄워보기\n\n      setData(data);\n    }).catch(Error => {\n      console.log(Error);\n    });\n  } //html 코드가 return 된 이후에 한번만 GetOpenAPI() 함수를 호출\n\n\n  useEffect(() => {\n    GetOpenAPI();\n  }, []); //   data.map((jsondata, idx) => {\n  // 이런식으로 map함수를 사용해 html코드 안에서 반복문을 돌릴 수 있습니다.\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"\\uBD88\\uB7EC\\uC624\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 49\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(User, \"odp7ftN9IDg1xewk47EaAZiwHYc=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/kji/Project/counselor/src/components/Start.js"],"names":["React","useState","useEffect","End","axios","User","props","data","setData","fetchData","get","then","response","RESULT","console","log","question","JSON","stringify","catch","Error","GetOpenAPI"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;;AAEA,WAASQ,SAAT,GAAqB;AACnBL,IAAAA,KAAK,CACFM,GADH,CAEI,mGAFJ,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClB,YAAML,IAAI,GAAGK,QAAQ,CAACL,IAAT,CAAcM,MAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAAC,CAAD,CAAJ,CAAQS,QAApB,EAFkB,CAEa;;AAC/BF,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACC,SAAL,CAAeX,IAAf,CAAZ,EAHkB,CAGiB;;AACnCC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KATH,EAUGY,KAVH,CAUUC,KAAD,IAAW;AAChBN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD,KAZH;AAaD,GAjBiC,CAkBlC;;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT,CAnBkC,CAuBlC;AACA;;AACA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEZ,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,oBAC4C;AAAA;AAAA;AAAA;AAAA,YAD5C,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAmBD;;GA5CuBJ,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport End from \"./End\";\nimport axios from \"axios\";\n\nexport default function User(props) {\n  const [data, setData] = useState([{}]);\n\n  function fetchData() {\n    axios\n      .get(\n        \"http://www.career.go.kr/inspct/openapi/test/questions?apikey=f96b530595b6dccabaed517667511170&q=6\"\n      )\n      .then((response) => {\n        const data = response.data.RESULT;\n        console.log(data[0].question); // 자바스크립트로 요소 1개 alert 띄워보기\n        console.log(JSON.stringify(data)); // 자바스크립트로 요소 전체 alert 띄워보기\n        setData(data);\n      })\n      .catch((Error) => {\n        console.log(Error);\n      });\n  }\n  //html 코드가 return 된 이후에 한번만 GetOpenAPI() 함수를 호출\n  useEffect(() => {\n    GetOpenAPI();\n  }, []);\n\n  //   data.map((jsondata, idx) => {\n  // 이런식으로 map함수를 사용해 html코드 안에서 반복문을 돌릴 수 있습니다.\n  return (\n    <>\n      <button onClick={fetchData}>불러오기</button> <br />\n      <br />\n      {/* <div>\n          {idx + 1}번 답변1: {jsondata.answer01}\n        </div>\n        <div>\n          {idx + 1}번 답변2: {jsondata.answer02}\n        </div>\n        <div>\n          {idx + 1}번 답변3: {jsondata.answer03}\n        </div>\n        <div>\n          {idx + 1}번 답변4: {jsondata.answer04}\n        </div>\n        <br></br> */}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}